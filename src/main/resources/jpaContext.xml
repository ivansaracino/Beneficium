<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
    <!-- per attivare le annotazioni inerenti mondo jpa-->
    <context:annotation-config />
    <!-- package base per la ricerca did annotation varie -->
    <context:component-scan base-package="it.cspnet.beneficium" />
   
    <jpa:repositories entity-manager-factory-ref="entityManagerFactory" base-package="it.cspnet.beneficium.data"/>
    
    <!-- codice preventivo eseguito da spring tramite metodi di questa classe -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	
    <!-- Le transazioni gestite via annotazion -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
	
    <!-- Gestore delle transazioni -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    
    <bean
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
 
        <property name="location">
            <value>classpath:/database.properties</value>
        </property>
    </bean>
	
    <!-- Dettagli di connessione al db -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="initialSize" value="${pool.initial.size}" />
        <property name="maxActive" value="${pool.max.active}" />
    </bean>
    
    <!-- Bean usato da spring per fornire gli entity manager dove occorrono -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="punit"/>
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" />
            </bean>
        </property>
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.dialect" value="org.hibernate.dialect.MySQL5InnoDBDialect"/>

               <!--<entry key="hibernate.hbm2ddl.auto" value="create" />-->

                <entry key="hibernate.format_sql" value="true" />
            </map>
        </property>
    </bean>

	
    
	
</beans>